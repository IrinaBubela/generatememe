{"version":3,"sources":["components/MainContent.js","components/TableRec.js","components/Table.js","App.js","index.js"],"names":["MainContent","className","src","this","props","alt","onSubmit","generateMeme","onChange","getDataFromFirstInput","type","placeholder","getDataFromSecondInput","style","color","inputError","isGenerated","width","onClick","reload","React","Component","TableRec","Table","click","memesTemplates","App","displaySelectedImage","e","setState","url","target","text1","value","text2","a","preventDefault","children","modifiedUrl","state","replace","console","log","fetch","res","elIsGenerated","err","error","memes","memesArr","undefined","i","length","imgData","push","displayMemesTemplates","window","location","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.611cd225.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass MainContent extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-content\">\r\n                <div className=\"left-content-side\">\r\n                    <img src={this.props.src} alt=\"\" />\r\n                </div>\r\n                <div className=\"right-content-side \">\r\n                    <form className=\"right-content-side \" onSubmit={this.props.generateMeme}>\r\n                        <h6>Enter the text</h6>\r\n                        <input onChange={this.props.getDataFromFirstInput} type=\"text\" placeholder=\"Text 1\" alt=\"...\" />\r\n                        <input onChange={this.props.getDataFromSecondInput} type=\"text\" placeholder=\"Text 2\" alt=\"...\" />\r\n                        <h6 style={{\r\n                            color: this.props.inputError == 'Please enter some text to get generated mem' ? \"red\" : \"green\"\r\n                        }}>\r\n                            {this.props.inputError}\r\n                        </h6>\r\n                        <div className=\"btns\">\r\n\r\n                            {this.props.isGenerated ? (\r\n                                <button className=\"btn btn-info\" style={{ width: \"150px\" }} onClick={this.props.reload} >Generate Again</button>) :\r\n                                <button className=\"btn btn-info\" >Generate</button>}\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default MainContent;\r\n","import React from \"react\";\r\n\r\nclass TableRec extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <td>\r\n                <figure >\r\n                    <img\r\n                        src={this.props.src}\r\n                        alt=\"...\">\r\n                    </img>\r\n                </figure>\r\n            </td >\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default TableRec;\r\n","import React from \"react\";\r\n\r\nclass Table extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <table>\r\n                < tbody >\r\n                    <tr onClick={this.props.click}>\r\n                        {this.props.memesTemplates}\r\n                    </tr>\r\n                </ tbody>\r\n            </table >\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport MainContent from \"./components/MainContent\";\r\nimport TableRec from \"./components/TableRec\";\r\nimport Table from \"./components/Table\"\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            memes: [\"tenguy\", \"afraid\", \"aag\", \"wonka\", \"disastergirl\", \"drake\", \"fwp\", \"facepalm\", \"harold\", \"morpheus\", \"apcr\", \"bihw\", \"feelsgood\", \"crazypills\", \"joker\"],\r\n            url: 'https://memegen.link/tenguy/_.jpg',\r\n            text1: '',\r\n            text2: '',\r\n            inputError: 'Please, wait! This can take a few seconds',\r\n            elIsGenerated: false\r\n        }\r\n    }\r\n\r\n    displayMemesTemplates() {\r\n        const memesArr = [];\r\n        if (this.state.memes !== undefined) {\r\n            for (var i = 0; i < this.state.memes.length; i++) {\r\n                const imgData =\r\n                    <TableRec src={'https://memegen.link/' + this.state.memes[i] + '/_.jpg'} />\r\n                memesArr.push(imgData)\r\n            }\r\n        }\r\n        return memesArr;\r\n    }\r\n\r\n\r\n    displaySelectedImage = (e) => {\r\n        this.setState({\r\n            url: e.target.src,\r\n        })\r\n    }\r\n\r\n\r\n    getDataFromFirstInput = (e) => {\r\n        this.setState({\r\n            text1: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    getDataFromSecondInput = (e) => {\r\n        this.setState({\r\n            text2: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    generateMeme = async (e) => {\r\n        e.preventDefault();\r\n        if (!e.target.children[1].value || !e.target.children[2]) {\r\n            this.setState({ inputError: 'Please enter some text to get generated mem' });\r\n\r\n        } else {\r\n            const modifiedUrl = this.state.url.replace('/_.jpg', \"\").replace('.jpg', \"\")\r\n\r\n            console.log(modifiedUrl);\r\n            const res = await fetch(`${modifiedUrl}/${this.state.text1}/${this.state.text2}.jpg`);\r\n            console.log(res);\r\n\r\n            try {\r\n                this.setState({\r\n                    url: res.url,\r\n                    inputError: 'Please, wait! This can take a few seconds',\r\n                    text1: '',\r\n                    text2: '',\r\n                    elIsGenerated: true\r\n                })\r\n                console.log(this.state.url);\r\n\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const memesTemplates = this.displayMemesTemplates();\r\n        return (\r\n            <div>\r\n                <h2 className=\"h2\">Meme Generator</h2>\r\n                <h6>Select a meme in a list below</h6>\r\n                <div className=\"selectedSide\">\r\n                    <div className={this.state.memes ? \"scrollable\" : null} >\r\n                        <Table click={this.displaySelectedImage} memesTemplates={memesTemplates} />\r\n                    </div>\r\n                    <MainContent\r\n                        generateMeme={this.generateMeme}\r\n                        getDataFromFirstInput={this.getDataFromFirstInput}\r\n                        getDataFromSecondInput={this.getDataFromSecondInput}\r\n                        inputError={this.state.inputError}\r\n                        src={this.state.url}\r\n                        isGenerated={this.state.elIsGenerated}\r\n                        reload={() => window.location.reload()} />\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from './App.js'\r\n\r\n\r\nReactDOM.render(\r\n    <App />, document.getElementById('root'))\r\n\r\n"],"sourceRoot":""}